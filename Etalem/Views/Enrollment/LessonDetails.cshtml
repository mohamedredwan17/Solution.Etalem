@model Etalem.Models.DTOs.Course.LessonDto

@{
    ViewData["Title"] = Model.Title + " - Lesson Details";
}

<div class="m-6 space-y-6">
    <h2 class="text-3xl font-bold mb-6 text-gray-800 dark:text-gray-200">@Model.Title</h2>

    <!-- Toast Container -->
    <div aria-live="polite" aria-atomic="true" class="fixed top-4 right-4 z-50">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="bg-green-500 text-white p-4 rounded-md shadow-lg mb-2 toast opacity-100 transition-opacity duration-500" role="alert">
                <div class="flex justify-between items-center">
                    <span class="font-semibold">Success</span>
                    <button type="button" class="text-white hover:text-gray-200" onclick="this.parentElement.parentElement.classList.add('opacity-0')">×</button>
                </div>
                <p class="mt-2">@TempData["SuccessMessage"]</p>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-500 text-white p-4 rounded-md shadow-lg mb-2 toast opacity-100 transition-opacity duration-500" role="alert">
                <div class="flex justify-between items-center">
                    <span class="font-semibold">Error</span>
                    <button type="button" class="text-white hover:text-gray-200" onclick="this.parentElement.parentElement.classList.add('opacity-0')">×</button>
                </div>
                <p class="mt-2">@TempData["ErrorMessage"]</p>
            </div>
        }
    </div>

    <!-- Lesson Info -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <p class="text-gray-600 dark:text-gray-400 mb-4">Duration: @Model.Duration minutes</p>
        <a href="@Url.Action("CourseContent", "Enrollment", new { courseId = Model.CourseId })" class="inline-flex items-center space-x-1 px-4 py-2 bg-gray-500 text-white rounded-full hover:bg-gray-600 dark:bg-gray-600 dark:hover:bg-gray-700 transition-colors duration-200">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            <span>Back to Course Content</span>
        </a>
    </div>

    <!-- Video Section -->
    @if (Model.Resources != null && Model.Resources.Any(r => r.ResourceUrl != null && (r.ResourceUrl.EndsWith(".mp4") || r.ResourceUrl.Contains("youtube.com") || r.ResourceUrl.Contains("vimeo.com"))))
    {
        var videoResource = Model.Resources.FirstOrDefault(r => r.ResourceUrl != null && (r.ResourceUrl.EndsWith(".mp4") || r.ResourceUrl.Contains("youtube.com") || r.ResourceUrl.Contains("vimeo.com")));
        if (videoResource != null)
        {
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
                <h3 class="text-xl font-semibold text-gray-800 dark:text-gray-200 mb-4">Lesson Video</h3>
                <div class="max-w-4xl mx-auto aspect-video rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700">
                    @if (videoResource.ResourceUrl.Contains("youtube.com") || videoResource.ResourceUrl.Contains("vimeo.com"))
                    {
                        <iframe class="w-full h-full" src="@videoResource.ResourceUrl" frameborder="0" allowfullscreen></iframe>
                    }
                    else
                    {
                        <video class="w-full h-full" controls>
                            <source src="@videoResource.ResourceUrl" type="video/mp4">
                            Your browser does not support the video tag.
                        </video>
                    }
                </div>
            </div>
        }
    }

    <!-- Lesson Content -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <h3 class="text-xl font-semibold text-gray-800 dark:text-gray-200 mb-4">Lesson Content</h3>
        @if (!string.IsNullOrEmpty(Model.Content))
        {
            <div class="prose prose-gray text-gray-700 dark:text-gray-300">
                @Html.Raw(Model.Content)
            </div>
        }
        else
        {
            <p class="text-gray-500 dark:text-gray-400">No content available for this lesson.</p>
        }
    </div>

    <!-- Resources Section -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <h3 class="text-xl font-semibold text-gray-800 dark:text-gray-200 mb-4">Resources</h3>
        @if (Model.Resources != null && Model.Resources.Any())
        {
            <ul class="space-y-2">
                @foreach (var resource in Model.Resources)
                {
                    <li>
                        @if (!string.IsNullOrEmpty(resource.ResourceUrl))
                        {
                            <a href="@resource.ResourceUrl" target="_blank" class="inline-flex items-center space-x-1 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
                                </svg>
                                <span>@resource.Title</span>
                            </a>
                        }
                        else
                        {
                            <span class="text-gray-600 dark:text-gray-400">@resource.Title (No URL available)</span>
                        }
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="text-gray-500 dark:text-gray-400">No resources available for this lesson.</p>
        }
    </div>

    <!-- Discussions Section -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <h3 class="text-xl font-semibold text-gray-800 dark:text-gray-200 mb-4">Discussions</h3>
        @if (Model.Discussions != null && Model.Discussions.Any())
        {
            <div class="space-y-4 overflow-y-auto max-h-60">
                @foreach (var discussion in Model.Discussions.OrderByDescending(d => d.CreatedAt))
                {
                    <div class="bg-gray-100 dark:bg-gray-700 p-3 rounded-md shadow-sm">
                        <p class="text-gray-800 dark:text-gray-200">@discussion.Content</p>
                        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">By: @discussion.UserName on @discussion.CreatedAt.ToString("d MMM yyyy")</p>
                        <!-- Reply Button -->
                        <button onclick="toggleReplyForm('reply-form-@discussion.Id')" class="inline-flex items-center space-x-1 text-blue-500 dark:text-blue-400 hover:text-blue-600 dark:hover:text-blue-300 text-sm mt-1">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h10a8 8 0 018 8v2M3 10l6 6m0-12l-6 6"></path>
                            </svg>
                            <span>Reply</span>
                        </button>
                        <!-- Reply Form -->
                        <form asp-controller="LessonDiscussion" asp-action="Add" method="post" class="mt-2 hidden" id="reply-form-@discussion.Id">
                            <input type="hidden" name="LessonId" value="@Model.Id" />
                            <input type="hidden" name="ParentDiscussionId" value="@discussion.Id" />
                            <div class="flex space-x-2">
                                <textarea name="Content" class="w-full p-2 border-2 border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100" rows="2" placeholder="Add a reply..."></textarea>
                                <button type="submit" class="inline-flex items-center space-x-1 bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                                    </svg>
                                    <span>Reply</span>
                                </button>
                            </div>
                        </form>
                        <!-- Replies -->
                        @if (discussion.Replies != null && discussion.Replies.Any())
                        {
                            <div class="ml-6 mt-2 space-y-2">
                                @foreach (var reply in discussion.Replies.OrderByDescending(r => r.CreatedAt))
                                {
                                    <div class="bg-gray-200 dark:bg-gray-600 p-2 rounded-md shadow-sm">
                                        <p class="text-gray-800 dark:text-gray-200">@reply.Content</p>
                                        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">By: @reply.UserName on @reply.CreatedAt.ToString("d MMM yyyy")</p>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-gray-500 dark:text-gray-400">No discussions yet. Be the first to start one!</p>
        }
        <!-- Add Discussion Form -->
        <form asp-controller="LessonDiscussion" asp-action="Add" method="post" class="mt-4">
            <input type="hidden" name="LessonId" value="@Model.Id" />
            <div class="flex space-x-2">
                <textarea name="Content" class="w-full p-2 border-2 border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100" rows="2" placeholder="Add a discussion..."></textarea>
                <button type="submit" class="inline-flex items-center space-x-1 bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                    </svg>
                    <span>Post</span>
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            setTimeout(() => {
                document.querySelectorAll('.toast').forEach(toast => {
                    toast.classList.add('opacity-0');
                });
            }, 5000);
        });

        // Toggle Reply Form
        function toggleReplyForm(formId) {
            const form = document.getElementById(formId);
            form.classList.toggle('hidden');
        }
    </script>
}