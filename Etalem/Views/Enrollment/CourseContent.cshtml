@model Etalem.Models.DTOs.Course.CourseDto

@{
    ViewData["Title"] = Model.Title + " - Course Content";
}

<div class="m-6">
    <!-- Toast Container -->
    <div aria-live="polite" aria-atomic="true" class="fixed top-4 right-4 z-50">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="bg-green-500 text-white p-4 rounded-md shadow-lg mb-2" role="alert">
                <div class="flex justify-between items-center">
                    <span class="font-semibold">Success</span>
                    <button type="button" class="text-white hover:text-gray-200" onclick="this.parentElement.parentElement.style.display='none'">×</button>
                </div>
                <p class="mt-2">@TempData["SuccessMessage"]</p>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-500 text-white p-4 rounded-md shadow-lg mb-2" role="alert">
                <div class="flex justify-between items-center">
                    <span class="font-semibold">Error</span>
                    <button type="button" class="text-white hover:text-gray-200" onclick="this.parentElement.parentElement.style.display='none'">×</button>
                </div>
                <p class="mt-2">@TempData["ErrorMessage"]</p>
            </div>
        }
    </div>

    
    <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        
        @if (!string.IsNullOrEmpty(Model.ThumbnailUrl))
        {
            <div class="mb-4 flex justify-center">
                <img src="@Model.ThumbnailUrl" alt="@Model.Title" class="w-48 h-48 object-cover rounded-lg border border-gray-200" />
            </div>
        }
        else
        {
            <div class="mb-4 flex justify-center">
                <div class="w-48 h-48 bg-gray-200 flex items-center justify-center rounded-lg border border-gray-200">
                    <span class="text-gray-500 text-sm">No Thumbnail</span>
                </div>
            </div>
        }

        
        <h2 class="text-3xl font-bold mb-4 text-gray-900 text-center">@Model.Title</h2>

        
        <div class="flex flex-wrap justify-center gap-6 mb-4 text-gray-600">
            <div>
                <span class="font-medium">Description:</span>
                <p class="text-gray-600 mt-1">@Model.Description</p>
            </div>
            <div>
                <span class="font-medium">Duration:</span>
                <p class="text-gray-600 mt-1">@(Model.DurationInMinutes / 60)h @(Model.DurationInMinutes % 60)m</p>
            </div>
            <div>
                <span class="font-medium">Content Items:</span>
                <p class="text-gray-600 mt-1">@Model.ContentItems.Count</p>
            </div>
        </div>

        <!--  Back to Dashboard -->
        <div class="text-center">
            <a href="@Url.Action("Index", "Enrollment")" class="inline-flex items-center space-x-1 p-2 bg-gray-500 text-white rounded-full hover:bg-gray-600 transition-colors duration-200">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                <span class="text-sm">Back to Dashboard</span>
            </a>
        </div>
    </div>

    <!-- قسم الـ Course Content -->
    <h3 class="text-2xl font-semibold text-gray-900 mb-4">Course Content</h3>

    @if (Model.ContentItems != null && Model.ContentItems.Any())
    {
        <div class="space-y-4">
            @foreach (var item in Model.ContentItems.Select((value, index) => new { value, index }))
            {
                @if (item.value.Type == "Lesson")
                {
                    <div class="bg-white rounded-lg shadow-md p-4 flex items-center justify-between border-l-4 @(item.value.IsCompleted ? "border-green-500" : "border-blue-500")">
                        <div class="flex items-center space-x-3">
                            <span class="text-gray-500 font-medium">@(item.index + 1).</span>
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <a href="@Url.Action("LessonDetails", "Enrollment", new { lessonId = item.value.Id })" class="text-lg font-medium @(item.value.IsCompleted ? "text-green-600" : "text-blue-600") hover:underline">
                                @item.value.Title
                                @if (item.value.IsCompleted)
                                {
                                    <span class="ml-2 text-green-600">✓</span>
                                }
                            </a>
                        </div>
                        <span class="text-sm text-gray-500">@item.value.Duration mins</span>
                    </div>
                }
                else if (item.value.Type == "Quiz")
                {
                    <div class="bg-white rounded-lg shadow-md p-4 flex items-center justify-between border-l-4 @(item.value.IsPassed ? "border-green-500" : "border-red-500")">
                        <div class="flex items-center space-x-3">
                            <span class="text-gray-500 font-medium">@(item.index + 1).</span>
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                            </svg>
                            <a href="@Url.Action("QuizDetails", "Enrollment", new { quizId = item.value.Id })" class="text-lg font-medium @(item.value.IsPassed ? "text-green-600" : "text-red-600") hover:underline">
                                Quiz: @item.value.Title
                                @if (item.value.IsPassed)
                                {
                                    <span class="ml-2 text-green-600">✓</span>
                                }
                            </a>
                        </div>
                        <div class="text-right text-sm text-gray-600">
                            <p>Time Limit: @item.value.TimeLimit mins</p>
                            <p>Passing Score: @item.value.PassingScore%</p>
                            <p>Max Attempts: @item.value.MaxAttempts</p>
                            <p>Status: <span class="@(item.value.IsPassed ? "text-green-600" : "text-red-600") font-medium">@(item.value.IsPassed ? "Passed" : "Not Passed")</span></p>
                        </div>
                    </div>
                }
            }
        </div>
    }
    else
    {
        <div class="text-center text-gray-500 py-6 bg-gray-50 rounded-lg">
            <p>No lessons or quizzes available for this course.</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            setTimeout(() => {
                document.querySelectorAll('.toast').forEach(toast => {
                    toast.style.display = 'none';
                });
            }, 5000);
        });
    </script>
}